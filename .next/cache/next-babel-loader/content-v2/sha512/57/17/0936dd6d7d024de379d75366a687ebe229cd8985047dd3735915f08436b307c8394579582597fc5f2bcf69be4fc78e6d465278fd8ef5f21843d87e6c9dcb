{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\nimport MeetDetail from '../../components/meetups/MeetDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetDetail, {\n    image: \"https://cdn.pixabay.com/photo/2021/08/04/03/06/hanoi-6520941_960_720.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://test:xjWQpPBWUcJtVEbu@cluster0.fj6g3.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://cdn.pixabay.com/photo/2021/08/04/03/06/hanoi-6520941_960_720.jpg',\n        id: meetupId,\n        title: 'A First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'The meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/user/Desktop/Nextjs/pages/[meetupId]/index.js"],"names":["MongoClient","Fragment","MeetDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,UAAD;AACI,IAAA,KAAK,EAAC,0EADV;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACjB,oGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADoB,KAAb,CAAZ;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,0EADC;AAERC,QAAAA,EAAE,EAAET,QAFI;AAGRU,QAAAA,KAAK,EAAE,gBAHC;AAIRC,QAAAA,OAAO,EAAE,0BAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb'\r\nimport { Fragment } from 'react'\r\nimport MeetDetail from '../../components/meetups/MeetDetail'\r\nfunction MeetupDetails() {\r\n    return (\r\n        <MeetDetail\r\n            image=\"https://cdn.pixabay.com/photo/2021/08/04/03/06/hanoi-6520941_960_720.jpg\"\r\n            title=\"A First Meetup\"\r\n            address=\"Some Street 5, Some City\"\r\n            description=\"The meetup description\"\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://test:xjWQpPBWUcJtVEbu@cluster0.fj6g3.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    )\r\n    const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() },\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId\r\n    console.log(meetupId)\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: 'https://cdn.pixabay.com/photo/2021/08/04/03/06/hanoi-6520941_960_720.jpg',\r\n                id: meetupId,\r\n                title: 'A First Meetup',\r\n                address: 'Some Street 5, Some City',\r\n                description: 'The meetup description',\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport default MeetupDetails\r\n"]},"metadata":{},"sourceType":"module"}